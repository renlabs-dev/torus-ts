name: Apply/Revert Migrations

on:
  workflow_dispatch:
    inputs:
      rollback:
        description: "Rollback last migration"
        type: boolean
        required: false
        default: false
  push:
    branches:
      - main
      - dev
      - feature/migrations
    paths:
      - "atlas/migrations/**"
      - ".github/workflows/apply-migrations.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-revert:
    runs-on: ubuntu-latest
    outputs:
      is_revert: ${{ steps.check-revert.outputs.is_revert }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if commit is a revert with migrations
        id: check-revert
        run: |
          # Get the current commit message
          COMMIT_MSG=$(git log -1 --pretty=%B)

          # Check if it's a revert commit
          if echo "$COMMIT_MSG" | grep -q "^Revert \""; then
            # Extract the reverted commit hash
            REVERTED_SHA=$(git log -1 --pretty=%B | grep -o '[a-f0-9]\{40\}' || true)

            if [ -n "$REVERTED_SHA" ]; then
              # Check if the reverted commit had changes in migrations folder
              if git show --name-only $REVERTED_SHA | grep -q "^atlas/migrations/"; then
                echo "is_revert=true" >> $GITHUB_OUTPUT
                exit 0
              fi
            fi
          fi
          echo "is_revert=false" >> $GITHUB_OUTPUT

  check-migrations:
    if: ${{ !inputs.rollback }}
    runs-on: ubuntu-latest
    outputs:
      has_pending: ${{ steps.check-migrations.outputs.has_pending }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Import Secrets
        id: import-secrets
        uses: hashicorp/vault-action@v3
        with:
          method: approle
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            torus_infra/data/${{ github.ref_name == 'main' && 'prod' || 'dev' }}_web_apps torus_webapps_db_url | POSTGRES_URL

      - uses: ariga/setup-atlas@v0

      - name: Check migration status
        id: check-migrations
        run: |
          output=$(atlas migrate status --env local --url "${{ env.POSTGRES_URL }}")
          echo "has_pending=$(echo "$output" | grep -q "PENDING" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "$output"

  apply-migrations:
    needs: [check-revert, check-migrations]
    if: ${{ !inputs.rollback && needs.check-revert.outputs.is_revert == 'false' && needs.check-migrations.outputs.has_pending == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: git fetch origin main:main

      - name: Import Secrets
        uses: hashicorp/vault-action@v3
        with:
          method: approle
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            torus_infra/data/${{ github.ref_name == 'main' && 'prod' || 'dev' }}_web_apps torus_webapps_db_url | POSTGRES_URL

      - uses: ariga/setup-atlas@v0

      - name: Run lint
        run: atlas migrate lint --env local --git-base main

      - name: Run dry-run migration
        run: atlas migrate apply --env local --dry-run --url "${{ env.POSTGRES_URL }}"

      - name: Apply migrations
        run: atlas migrate apply --env local --url "${{ env.POSTGRES_URL }}"

  rollback-migrations:
    needs: [check-revert, check-migrations]
    if: ${{ inputs.rollback || needs.check-revert.outputs.is_revert == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Import Secrets
        uses: hashicorp/vault-action@v3
        with:
          method: approle
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            torus_infra/data/${{ github.ref_name == 'main' && 'prod' || 'dev' }}_web_apps torus_webapps_db_url | POSTGRES_URL

      - uses: ariga/setup-atlas@v0

      - name: atlas migrate down
        run: atlas migrate down --env local --url "${{ env.POSTGRES_URL }}"

  restart-apps:
    needs: [check-migrations, apply-migrations, rollback-migrations]
    if: |
      always() &&
      (
        (needs.apply-migrations.result == 'success') ||
        (needs.rollback-migrations.result == 'success')
      )
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/renlabs-dev/devops-ci:latest
    env:
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
    strategy:
      matrix:
        app:
          - torus-allocator
          - torus-cache
          - torus-governance
          - torus-worker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Kubernetes authentication
        run: /apps/k8s_auth_w_approle_sa.sh

      - name: Set environment variables
        run: |
          echo "NAMESPACE=torus-${{ github.ref_name == 'main' && 'prod' || 'dev' }}-web-apps" >> $GITHUB_ENV

      - name: Restart apps (${{ matrix.app }})
        run: |
          kubectl rollout restart -n ${NAMESPACE} deployment -l app=${{ matrix.app }}
          kubectl rollout status -n ${NAMESPACE} deployment -l app=${{ matrix.app }}  --timeout=300s
