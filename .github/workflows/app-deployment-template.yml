# .github/workflows/app-deployment-template.yml
name: App Deployment Template

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
    secrets:
      VAULT_ADDR:
        required: true
      VAULT_ROLE_ID:
        required: true
      VAULT_SECRET_ID:
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ inputs.app_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker-build:
    permissions: write-all
    runs-on: ubuntu-22.04-32core-karl
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare build
        id: prepare
        run: |
          echo "SANITIZED_REF=$(echo "${GITHUB_REF##*/}" | tr '/' '-')" >> $GITHUB_ENV

      - id: commit
        uses: prompt/actions-commit-hash@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: docker/Dockerfile
          build-args: |
            APP_NAME=${{ inputs.app_name }}
          tags: |
            ghcr.io/renlabs-dev/${{ inputs.app_name }}:${{ steps.commit.outputs.short }}
            ghcr.io/renlabs-dev/${{ inputs.app_name }}:${{ env.SANITIZED_REF }}

  clean-stale:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/renlabs-dev/devops-ci:latest

    env:
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}

    steps:
      - name: Setup Kubernetes authentication
        run: /apps/k8s_auth_w_approle_sa.sh

      - name: Set environment variables
        run: |
          echo "ENV_NAME=${{ github.ref_name == 'main' && 'prod' || 'dev' }}" >> $GITHUB_ENV

      - name: Clean stale releases
        run: |
          /apps/clean_stale_releases.sh torus-${ENV_NAME}-web-apps

  deploy:
    needs: [docker-build, clean-stale]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/renlabs-dev/devops-ci:latest

    env:
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
      APP_NAME: ${{ inputs.app_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Kubernetes authentication
        run: /apps/k8s_auth_w_approle_sa.sh

      - name: Add and update Helm repositories
        run: |
          helm repo add renlabs https://charts.renlabs.dev/
          helm repo update

      - id: commit
        uses: prompt/actions-commit-hash@v3

      - name: Set environment variables
        run: |
          echo "ENV_NAME=${{ github.ref_name == 'main' && 'prod' || 'dev' }}" >> $GITHUB_ENV

      - name: Install shared resources
        run: |
          helm template torus-${ENV_NAME}-aux \
            -f helm/values-utils.yaml \
            -n torus-${ENV_NAME}-web-apps \
            --set environmentName=${ENV_NAME} \
            renlabs/utils | kubectl apply -f -

      - name: Deploy application
        working-directory: apps/${{ env.APP_NAME }}
        run: |
          helmfile sync -e ${ENV_NAME} --set deployment.image.tag=${{ steps.commit.outputs.short }}
