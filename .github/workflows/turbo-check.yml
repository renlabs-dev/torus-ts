name: Check Turbo Changes
on:
  workflow_call:
    outputs:
      torus-wallet:
        description: "Whether torus-wallet changed"
        value: ${{ jobs.run.outputs.torus-wallet }}
      torus-page:
        description: "Whether torus-page changed"
        value: ${{ jobs.run.outputs.torus-page }}
      torus-portal:
        description: "Whether torus-portal changed"
        value: ${{ jobs.run.outputs.torus-portal }}
      torus-allocator:
        description: "Whether torus-allocator changed"
        value: ${{ jobs.run.outputs.torus-allocator }}
      torus-cache:
        description: "Whether torus-cache changed"
        value: ${{ jobs.run.outputs.torus-cache }}
      torus-bridge:
        description: "Whether torus-bridge changed"
        value: ${{ jobs.run.outputs.torus-bridge }}
      torus-worker:
        description: "Whether torus-worker changed"
        value: ${{ jobs.run.outputs.torus-worker }}
      torus-governance:
        description: "Whether torus-governance changed"
        value: ${{ jobs.run.outputs.torus-governance }}

jobs:
  run:
    runs-on: ubicloud-standard-2
    outputs:
      torus-wallet: ${{ steps.changed.outputs.torus-wallet }}
      torus-page: ${{ steps.changed.outputs.torus-page }}
      torus-portal: ${{ steps.changed.outputs.torus-portal }}
      torus-allocator: ${{ steps.changed.outputs.torus-allocator }}
      torus-cache: ${{ steps.changed.outputs.torus-cache }}
      torus-bridge: ${{ steps.changed.outputs.torus-bridge }}
      torus-worker: ${{ steps.changed.outputs.torus-worker }}
      torus-governance: ${{ steps.changed.outputs.torus-governance }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Get apps list
        run: |
          ls -d apps/* | sed 's/apps\///' | jq -R -s -c 'split("\n")[:-1]' > packages_to_track.json
          echo "Found packages:"
          cat packages_to_track.json

      - name: Get build json (PR based)
        if: github.event_name == 'pull_request'
        run: |
          pnpm exec turbo run build --filter="...[origin/${{ github.base_ref }}]" --dry-run=json 2>/dev/null > build.json

      # pnpm exec turbo run build --filter="...[HEAD^1]" --dry-run=json 2>/dev/null > build.json
      - name: Get build json (Push based)
        if: github.event_name == 'push'
        run: |
          if git rev-parse --quiet --verify ${{ github.event.before }}^{commit}; then
            BASE_COMMIT=$(git merge-base ${{ github.event.before }} HEAD)
            pnpm exec turbo run build --filter="...[${BASE_COMMIT}]" --dry-run=json 2>/dev/null > build.json
          else
            pnpm exec turbo run build --dry-run=json 2>/dev/null > build.json
          fi

      - name: Get changed packages
        run: |
          cat build.json | jq -c '[.tasks[].package]' > package_list
          echo "Changed packages:"
          cat package_list

      - name: Check changed packages
        id: changed
        run: |
          CHANGED_PACKAGES=$(cat package_list)

          while read -r package; do
            package=$(echo "$package" | tr -d '"')
            IS_CHANGED=$(echo $CHANGED_PACKAGES | jq -r "any(. == \"$package\")")
            echo "$package=$IS_CHANGED" >> $GITHUB_OUTPUT
          done < <(jq -c '.[]' packages_to_track.json)

      - name: Debug outputs
        run: |
          echo 'Changed packages status:'
          echo '${{ toJSON(steps.changed.outputs) }}' | jq '.'
