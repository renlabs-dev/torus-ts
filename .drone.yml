kind: pipeline
type: docker
name: commune-page

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/commune-page
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-page

  - name: deploy
    image: digitalocean/doctl:latest
    environment:
      DO_CTL_TOKEN:
        from_secret: DO_CTL_TOKEN
    commands:
      - apk add jq
      - export PATH=$PATH:/app
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - app_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "commune-page" || echo "dev-commune-page" )
      - app_id=$(doctl apps list -t $DO_CTL_TOKEN -o json | jq --arg name "$app_name" '.[] | select(.spec.name == $name) | .id' | tr -d '"')
      - doctl apps spec get $app_id -t $DO_CTL_TOKEN > spec.yaml
      - sed -i "s/\(tag:*\).*/\1 \"$COMMIT_SHORT_SHA\"/" spec.yaml
      - doctl apps spec validate spec.yaml -t $DO_CTL_TOKEN --schema-only > /dev/null
      - doctl apps update $app_id -t $DO_CTL_TOKEN --wait --spec spec.yaml

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-governance/**
      - apps/commune-validator/**
      - apps/communex-page/**
      - apps/commune-worker/**
      - apps/sample-app/**
      - apps/commune-wallet/**
      - apps/commune-cache/**
---
kind: pipeline
type: docker
name: community-validator

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/community-validator
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-validator

  - name: deploy
    image: digitalocean/doctl:latest
    environment:
      DO_CTL_TOKEN:
        from_secret: DO_CTL_TOKEN
    commands:
      - apk add jq
      - export PATH=$PATH:/app
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - app_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "community-validator" || echo "dev-community-validator" )
      - app_id=$(doctl apps list -t $DO_CTL_TOKEN -o json | jq --arg name "$app_name" '.[] | select(.spec.name == $name) | .id' | tr -d '"')
      - doctl apps spec get $app_id -t $DO_CTL_TOKEN > spec.yaml
      - sed -i "s/\(tag:*\).*/\1 \"$COMMIT_SHORT_SHA\"/" spec.yaml
      - doctl apps spec validate spec.yaml -t $DO_CTL_TOKEN --schema-only > /dev/null
      - doctl apps update $app_id -t $DO_CTL_TOKEN --wait --spec spec.yaml

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-worker/**
      - apps/commune-governance/**
      - apps/commune-page/**
      - apps/communex-page/**
      - apps/sample-app/**
      - apps/commune-wallet/**
      - apps/commune-cache/**
---
kind: pipeline
type: docker
name: commune-worker

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/commune-worker
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-worker

  - name: deploy
    image: digitalocean/doctl:latest
    environment:
      DO_CTL_TOKEN:
        from_secret: DO_CTL_TOKEN
    commands:
      - apk add jq
      - export PATH=$PATH:/app
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - app_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "commune-worker" || echo "dev-commune-worker" )
      - app_id=$(doctl apps list -t $DO_CTL_TOKEN -o json | jq --arg name "$app_name" '.[] | select(.spec.name == $name) | .id' | tr -d '"')
      - doctl apps spec get $app_id -t $DO_CTL_TOKEN > spec.yaml
      - sed -i "s/\(tag:*\).*/\1 \"$COMMIT_SHORT_SHA\"/" spec.yaml
      - doctl apps spec validate spec.yaml -t $DO_CTL_TOKEN --schema-only > /dev/null
      - doctl apps update $app_id -t $DO_CTL_TOKEN --wait --spec spec.yaml

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-validator/**
      - apps/commune-governance/**
      - apps/commune-page/**
      - apps/communex-page/**
      - apps/sample-app/**
      - apps/commune-wallet/**
      - apps/commune-cache/**
---
kind: pipeline
type: docker
name: commune-governance

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/commune-governance
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-governance

  - name: deploy
    image: digitalocean/doctl:latest
    environment:
      DO_CTL_TOKEN:
        from_secret: DO_CTL_TOKEN
    commands:
      - apk add jq
      - export PATH=$PATH:/app
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - app_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "commune-governance" || echo "dev-commune-governance" )
      - app_id=$(doctl apps list -t $DO_CTL_TOKEN -o json | jq --arg name "$app_name" '.[] | select(.spec.name == $name) | .id' | tr -d '"')
      - doctl apps spec get $app_id -t $DO_CTL_TOKEN > spec.yaml
      - sed -i "s/\(tag:*\).*/\1 \"$COMMIT_SHORT_SHA\"/" spec.yaml
      - doctl apps spec validate spec.yaml -t $DO_CTL_TOKEN --schema-only > /dev/null
      - doctl apps update $app_id -t $DO_CTL_TOKEN --wait --spec spec.yaml

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-page/**
      - apps/commune-validator/**
      - apps/communex-page/**
      - apps/commune-worker/**
      - apps/sample-app/**
      - apps/commune-wallet/**
      - apps/commune-cache/**
---
kind: pipeline
type: docker
name: commune-wallet

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/commune-wallet
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-wallet

  - name: deploy
    image: digitalocean/doctl:latest
    environment:
      DO_CTL_TOKEN:
        from_secret: DO_CTL_TOKEN
    commands:
      - apk add jq
      - export PATH=$PATH:/app
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - app_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "commune-wallet" || echo "dev-commune-wallet" )
      - app_id=$(doctl apps list -t $DO_CTL_TOKEN -o json | jq --arg name "$app_name" '.[] | select(.spec.name == $name) | .id' | tr -d '"')
      - doctl apps spec get $app_id -t $DO_CTL_TOKEN > spec.yaml
      - sed -i "s/\(tag:*\).*/\1 \"$COMMIT_SHORT_SHA\"/" spec.yaml
      - doctl apps spec validate spec.yaml -t $DO_CTL_TOKEN --schema-only > /dev/null
      - doctl apps update $app_id -t $DO_CTL_TOKEN --wait --spec spec.yaml

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-page/**
      - apps/commune-validator/**
      - apps/communex-page/**
      - apps/commune-worker/**
      - apps/sample-app/**
      - apps/commune-governance/**
      - apps/commune-cache/**
---
kind: pipeline
type: docker
name: commune-cache

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/commune-cache
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-cache

  - name: deploy
    image: digitalocean/doctl:latest
    environment:
      DO_CTL_TOKEN:
        from_secret: DO_CTL_TOKEN
    commands:
      - apk add jq
      - export PATH=$PATH:/app
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - app_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "commune-cache" || echo "dev-commune-cache" )
      - app_id=$(doctl apps list -t $DO_CTL_TOKEN -o json | jq --arg name "$app_name" '.[] | select(.spec.name == $name) | .id' | tr -d '"')
      - doctl apps spec get $app_id -t $DO_CTL_TOKEN > spec.yaml
      - sed -i "s/\(tag:*\).*/\1 \"$COMMIT_SHORT_SHA\"/" spec.yaml
      - doctl apps spec validate spec.yaml -t $DO_CTL_TOKEN --schema-only > /dev/null
      - doctl apps update $app_id -t $DO_CTL_TOKEN --wait --spec spec.yaml

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-page/**
      - apps/commune-validator/**
      - apps/communex-page/**
      - apps/commune-worker/**
      - apps/sample-app/**
      - apps/commune-governance/**
      - apps/commune-wallet/**
