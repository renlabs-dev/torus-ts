kind: pipeline
type: docker
name: clean-stale-releases

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: clean
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
    commands:
      # Authenticate to Kubernetes
      - /apps/k8s_auth_w_approle_sa.sh
      # Set auxiliary environment variables
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      # Run script
      - /apps/clean_stale_releases.sh torus-"$env_name"-web-apps

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
---
kind: pipeline
type: docker
name: torus-page

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-page
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-page

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: torus-page
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle_sa.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      # Install shared resources
      - >-
        helm template torus-"$env_name"-aux
        -f helm/values-utils.yaml -n torus-"$env_name"-web-apps
        --set environmentName="$env_name"
        renlabs/utils | kubectl apply -f -
      # Install application charts
      - cd apps/"$APP_NAME"
      - helmfile sync -e "$env_name" --set deployment.image.tag="$COMMIT_SHORT_SHA"

depends_on:
  - clean-stale-releases

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-governance/**
      - apps/torus-validator/**
      - apps/torus-worker/**
      - apps/torus-wallet/**
      - apps/torus-cache/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: torus-validator

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-validator
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-validator

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: torus-validator
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle_sa.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      # Install shared resources
      - >-
        helm template torus-"$env_name"-aux
        -f helm/values-utils.yaml -n torus-"$env_name"-web-apps
        --set environmentName="$env_name"
        renlabs/utils | kubectl apply -f -
      # Install application charts
      - cd apps/"$APP_NAME"
      - helmfile sync -e "$env_name" --set deployment.image.tag="$COMMIT_SHORT_SHA"

depends_on:
  - clean-stale-releases

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-worker/**
      - apps/torus-governance/**
      - apps/torus-page/**
      - apps/torus-wallet/**
      - apps/torus-cache/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: torus-worker

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-worker
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-worker

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: torus-worker
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle_sa.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      # Install shared resources
      - >-
        helm template torus-"$env_name"-aux
        -f helm/values-utils.yaml -n torus-"$env_name"-web-apps
        --set environmentName="$env_name"
        renlabs/utils | kubectl apply -f -
      # Install application charts
      - cd apps/"$APP_NAME"
      - helmfile sync -e "$env_name" --set deployment.image.tag="$COMMIT_SHORT_SHA"

depends_on:
  - clean-stale-releases

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-validator/**
      - apps/torus-governance/**
      - apps/torus-page/**
      - apps/torus-wallet/**
      - apps/torus-cache/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: torus-governance

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-governance
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-governance

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: torus-governance
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle_sa.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      # Install shared resources
      - >-
        helm template torus-"$env_name"-aux
        -f helm/values-utils.yaml -n torus-"$env_name"-web-apps
        --set environmentName="$env_name"
        renlabs/utils | kubectl apply -f -
      # Install application charts
      - cd apps/"$APP_NAME"
      - helmfile sync -e "$env_name" --set deployment.image.tag="$COMMIT_SHORT_SHA"

depends_on:
  - clean-stale-releases

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-page/**
      - apps/torus-validator/**
      - apps/torus-worker/**
      - apps/torus-wallet/**
      - apps/torus-cache/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: torus-wallet

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-wallet
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-wallet

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: torus-wallet
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle_sa.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      # Install shared resources
      - >-
        helm template torus-"$env_name"-aux
        -f helm/values-utils.yaml -n torus-"$env_name"-web-apps
        --set environmentName="$env_name"
        renlabs/utils | kubectl apply -f -
      # Install application charts
      - cd apps/"$APP_NAME"
      - helmfile sync -e "$env_name" --set deployment.image.tag="$COMMIT_SHORT_SHA"

depends_on:
  - clean-stale-releases

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-page/**
      - apps/torus-validator/**
      - apps/torus-worker/**
      - apps/torus-governance/**
      - apps/torus-cache/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: torus-cache

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-cache
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-cache

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: torus-cache
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle_sa.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      # Install shared resources
      - >-
        helm template torus-"$env_name"-aux
        -f helm/values-utils.yaml -n torus-"$env_name"-web-apps
        --set environmentName="$env_name"
        renlabs/utils | kubectl apply -f -
      # Install application charts
      - cd apps/"$APP_NAME"
      - helmfile sync -e "$env_name" --set deployment.image.tag="$COMMIT_SHORT_SHA"

depends_on:
  - clean-stale-releases

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-page/**
      - apps/torus-validator/**
      - apps/torus-worker/**
      - apps/torus-governance/**
      - apps/torus-wallet/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: torus-bridge

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-bridge
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-bridge

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: torus-bridge
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle_sa.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      # Install shared resources
      - >-
        helm template torus-"$env_name"-aux
        -f helm/values-utils.yaml -n torus-"$env_name"-web-apps
        --set environmentName="$env_name"
        renlabs/utils | kubectl apply -f -
      # Install application charts
      - cd apps/"$APP_NAME"
      - helmfile sync -e "$env_name" --set deployment.image.tag="$COMMIT_SHORT_SHA"

depends_on:
  - clean-stale-releases

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-governance/**
      - apps/torus-validator/**
      - apps/torus-worker/**
      - apps/torus-wallet/**
      - apps/torus-cache/**
      - apps/torus-page/**
# DRY-RUN PIPELINES
---
kind: pipeline
type: docker
name: check-torus-page

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-page
      tags:
        - dry-run
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-page
      dry_run: true

trigger:
  branch:
    exclude:
      - drone
      - main
      - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-governance/**
      - apps/torus-validator/**
      - apps/torus-worker/**
      - apps/torus-wallet/**
      - apps/torus-cache/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: check-torus-validator

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-validator
      tags:
        - dry-run
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-validator
      dry_run: true

trigger:
  branch:
    exclude:
      - drone
      - main
      - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-worker/**
      - apps/torus-governance/**
      - apps/torus-page/**
      - apps/torus-wallet/**
      - apps/torus-cache/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: check-torus-worker

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-worker
      tags:
        - dry-run
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-worker
      dry_run: true

trigger:
  branch:
    exclude:
      - drone
      - main
      - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-validator/**
      - apps/torus-governance/**
      - apps/torus-page/**
      - apps/torus-wallet/**
      - apps/torus-cache/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: check-torus-governance

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-governance
      tags:
        - dry-run
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-governance
      dry_run: true

trigger:
  branch:
    exclude:
      - drone
      - main
      - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-page/**
      - apps/torus-validator/**
      - apps/torus-worker/**
      - apps/torus-wallet/**
      - apps/torus-cache/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: check-torus-wallet

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-wallet
      tags:
        - dry-run
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-wallet
      dry_run: true

trigger:
  branch:
    exclude:
      - drone
      - main
      - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-page/**
      - apps/torus-validator/**
      - apps/torus-worker/**
      - apps/torus-governance/**
      - apps/torus-cache/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: check-torus-cache

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-cache
      tags:
        - dry-run
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-cache
      dry_run: true

trigger:
  branch:
    exclude:
      - drone
      - main
      - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-page/**
      - apps/torus-validator/**
      - apps/torus-worker/**
      - apps/torus-governance/**
      - apps/torus-wallet/**
      - apps/torus-bridge/**
---
kind: pipeline
type: docker
name: check-torus-bridge

environment:
  GIT_LFS_SKIP_SMUDGE: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/torus-bridge
      tags:
        - dry-run
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=torus-bridge
      dry_run: true

trigger:
  branch:
    exclude:
      - drone
      - main
      - dev
  event:
    - push
  paths:
    exclude:
      - apps/torus-page/**
      - apps/torus-validator/**
      - apps/torus-worker/**
      - apps/torus-governance/**
      - apps/torus-wallet/**
      - apps/torus-cache/**
