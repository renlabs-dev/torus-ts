deployment:
  reloadOnChange: true

  imagePullSecrets:
    - name: renlabs-ghcr-secret

  env:
    NEXT_PUBLIC_TORUS_CHAIN_ENV:
      valueFrom:
        configMapKeyRef:
          name: '{{ template "application.name" . }}-config'
          key: next_public_chain_env
    NEXT_PUBLIC_TORUS_RPC_URL:
      valueFrom:
        configMapKeyRef:
          name: '{{ template "application.name" . }}-config'
          key: next_public_ws_url
    TORUS_RPC_URL:
      valueFrom:
        configMapKeyRef:
          name: '{{ template "application.name" . }}-config'
          key: next_public_ws_url
    NEXT_PUBLIC_TORUS_RPC_HTTPS_URL:
      valueFrom:
        configMapKeyRef:
          name: '{{ template "application.name" . }}-config'
          key: next_public_rpc_https_url
    NEXT_PUBLIC_TORUS_CACHE_URL:
      valueFrom:
        configMapKeyRef:
          name: '{{ template "application.name" . }}-config'
          key: next_public_cache_provider_url
    PINATA_JWT:
      valueFrom:
        secretKeyRef:
          name: "torus-{{ .Values.environmentName }}-web-apps-secret"
          key: pinata_jwt
    DISCORD_BOT_SECRET:
      valueFrom:
        secretKeyRef:
          name: "torus-{{ .Values.environmentName }}-web-apps-secret"
          key: discord_bot_secret

  startupProbe:
    enabled: true
    failureThreshold: 30
    periodSeconds: 10
    httpGet:
      path: /
      port: 8000

  readinessProbe:
    enabled: true
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    initialDelaySeconds: 10
    httpGet:
      path: /
      port: 8000

  livenessProbe:
    enabled: true
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    initialDelaySeconds: 10
    httpGet:
      path: /
      port: 8000

  # resources:
  #   limits:
  #     memory: 256Mi
  #     cpu: 0.5
  #   requests:
  #     memory: 128Mi
  #     cpu: 0.1

  containerSecurityContext:
    readOnlyRootFilesystem: false
    runAsNonRoot: false

  # command: []

  # args: []

  ports:
    - containerPort: 8000
      name: http
      protocol: TCP

service:
  ports:
    - port: 8000
      name: http
      protocol: TCP
      targetPort: 8000

ingress:
  enabled: true
  forecastleExpose: true
  ingressClassName: nginx

configMap:
  enabled: true
  files:
    config:
      next_public_ws_url: "{{ .Values.wssApiEndpoint }}"
      next_public_rpc_https_url: '{{ .Values.wssApiEndpoint | replace "wss" "https" }}/'
      next_public_cache_provider_url: "{{ .Values.cacheUrl }}"
      next_public_chain_env: "{{ .Values.chainEnv }}"
      torus_allocator_address: "5DoVVgN7R6vHw4mvPX8s4EkkR8fgN1UJ5TDfKzab8eW9z89b"
      # OAuth config variables
      discord_redirect_url: "https://{{ .Values.ingressHost }}/dao-portal"
      nextauth_url: "https://{{ .Values.ingressHost }}"
