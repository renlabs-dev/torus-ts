-- Create "cadre" table
CREATE TABLE "cadre" ("id" serial NOT NULL, "user_key" character varying(256) NOT NULL, "discord_id" character varying(20) NOT NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "cadre_discord_id_unique" UNIQUE ("discord_id"), CONSTRAINT "cadre_user_key_unique" UNIQUE ("user_key"), CONSTRAINT "discord_id_check" CHECK ((length((discord_id)::text) >= 17) AND (length((discord_id)::text) <= 20)));
-- Create enum type "application_status"
CREATE TYPE "application_status" AS ENUM ('OPEN', 'ACCEPTED', 'REJECTED', 'EXPIRED');
-- Create enum type "candidacy_status"
CREATE TYPE "candidacy_status" AS ENUM ('PENDING', 'ACCEPTED', 'REJECTED', 'REMOVED');
-- Create enum type "governance_item_type"
CREATE TYPE "governance_item_type" AS ENUM ('PROPOSAL', 'AGENT_APPLICATION');
-- Create enum type "reaction_type"
CREATE TYPE "reaction_type" AS ENUM ('LIKE', 'DISLIKE');
-- Create enum type "report_reason"
CREATE TYPE "report_reason" AS ENUM ('SPAM', 'VIOLENCE', 'HARASSMENT', 'HATE_SPEECH', 'SEXUAL_CONTENT');
-- Create enum type "agent_application_vote_type"
CREATE TYPE "agent_application_vote_type" AS ENUM ('ACCEPT', 'REFUSE', 'REMOVE');
-- Create "proposal" table
CREATE TABLE "proposal" ("id" serial NOT NULL, "expiration_block" integer NOT NULL, "status" "application_status" NOT NULL, "proposer_key" character varying(256) NOT NULL, "creation_block" integer NOT NULL, "metadata_uri" text NOT NULL, "proposal_cost" numeric NOT NULL, "notified" boolean NOT NULL DEFAULT false, "proposal_id" integer NOT NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "proposal_proposal_id_unique" UNIQUE ("proposal_id"));
-- Create "user_discord_info" table
CREATE TABLE "user_discord_info" ("id" serial NOT NULL, "discord_id" character varying(20) NOT NULL, "user_name" text NOT NULL, "avatar_url" text NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "user_discord_info_discord_id_unique" UNIQUE ("discord_id"), CONSTRAINT "discord_id_check" CHECK ((length((discord_id)::text) >= 17) AND (length((discord_id)::text) <= 20)));
-- Create "governance_notification" table
CREATE TABLE "governance_notification" ("id" serial NOT NULL, "item_type" "governance_item_type" NOT NULL, "item_id" integer NOT NULL, "notified_at" timestamptz NULL DEFAULT now(), "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"));
-- Create "cadre_vote_history" table
CREATE TABLE "cadre_vote_history" ("id" serial NOT NULL, "user_key" character varying(256) NOT NULL, "applicant_key" character varying(256) NOT NULL, "vote" "agent_application_vote_type" NOT NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"));
-- Create "whitelist_application" table
CREATE TABLE "whitelist_application" ("id" serial NOT NULL, "user_key" character varying(256) NOT NULL, "payer_key" character varying(256) NOT NULL, "data" text NOT NULL, "cost" numeric NOT NULL, "expires_at" integer NOT NULL, "status" "application_status" NOT NULL, "notified" boolean NOT NULL DEFAULT false, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "whitelist_application_user_key_unique" UNIQUE ("user_key"));
-- Create "agent_application_vote" table
CREATE TABLE "agent_application_vote" ("id" serial NOT NULL, "application_id" integer NOT NULL, "user_key" character varying(256) NOT NULL, "vote" "agent_application_vote_type" NOT NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "agent_application_vote_application_id_user_key_unique" UNIQUE ("application_id", "user_key"), CONSTRAINT "agent_application_vote_user_key_cadre_user_key_fk" FOREIGN KEY ("user_key") REFERENCES "cadre" ("user_key") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- Create "agent" table
CREATE TABLE "agent" ("id" serial NOT NULL, "at_block" integer NOT NULL, "key" character varying(256) NOT NULL, "name" text NULL, "api_url" text NULL, "metadata_uri" text NULL, "weight_factor" integer NULL, "is_whitelisted" boolean NULL, "registration_block" integer NULL, "total_staked" bigint NULL, "total_stakers" integer NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "agent_key_unique" UNIQUE ("key"), CONSTRAINT "percent_check" CHECK ((weight_factor >= 0) AND (weight_factor <= 100)));
-- Create index "key_index" to table: "agent"
CREATE INDEX "key_index" ON "agent" ("key");
-- Create "agent_report" table
CREATE TABLE "agent_report" ("id" serial NOT NULL, "user_key" character varying(256) NOT NULL, "agent_key" character varying(256) NOT NULL, "reason" "report_reason" NOT NULL, "content" text NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "agent_report_agent_key_agent_key_fk" FOREIGN KEY ("agent_key") REFERENCES "agent" ("key") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- Create "cadre_candidate" table
CREATE TABLE "cadre_candidate" ("id" serial NOT NULL, "user_key" character varying(256) NOT NULL, "discord_id" character varying(20) NOT NULL, "candidacy_status" "candidacy_status" NOT NULL DEFAULT 'PENDING', "content" text NOT NULL, "notified" boolean NOT NULL DEFAULT false, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "cadre_candidate_discord_id_unique" UNIQUE ("discord_id"), CONSTRAINT "cadre_candidate_user_key_unique" UNIQUE ("user_key"), CONSTRAINT "discord_id_check" CHECK ((length((discord_id)::text) >= 17) AND (length((discord_id)::text) <= 20)));
-- Create "cadre_vote" table
CREATE TABLE "cadre_vote" ("id" serial NOT NULL, "user_key" character varying(256) NOT NULL, "applicant_key" character varying(256) NOT NULL, "vote" "agent_application_vote_type" NOT NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "cadre_vote_user_key_applicant_key_unique" UNIQUE ("user_key", "applicant_key"), CONSTRAINT "cadre_vote_applicant_key_cadre_candidate_user_key_fk" FOREIGN KEY ("applicant_key") REFERENCES "cadre_candidate" ("user_key") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "cadre_vote_user_key_cadre_user_key_fk" FOREIGN KEY ("user_key") REFERENCES "cadre" ("user_key") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- Create "comment" table
CREATE TABLE "comment" ("id" serial NOT NULL, "item_type" "governance_item_type" NOT NULL, "item_id" integer NOT NULL, "user_key" character varying(256) NOT NULL, "user_name" text NULL, "content" text NOT NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"));
-- Create index "comment_item_type_item_id_user_key_index" to table: "comment"
CREATE INDEX "comment_item_type_item_id_user_key_index" ON "comment" ("item_type", "item_id", "user_key");
-- Create "comment_interaction" table
CREATE TABLE "comment_interaction" ("id" serial NOT NULL, "user_key" character varying(256) NOT NULL, "comment_id" integer NOT NULL, "reaction_type" "reaction_type" NOT NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "comment_interaction_user_key_comment_id_unique" UNIQUE ("user_key", "comment_id"), CONSTRAINT "comment_interaction_comment_id_comment_id_fk" FOREIGN KEY ("comment_id") REFERENCES "comment" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- Create index "comment_interaction_user_key_comment_id_index" to table: "comment_interaction"
CREATE INDEX "comment_interaction_user_key_comment_id_index" ON "comment_interaction" ("user_key", "comment_id");
-- Create "comment_report" table
CREATE TABLE "comment_report" ("id" serial NOT NULL, "user_key" character varying(256) NOT NULL, "comment_id" integer NOT NULL, "reason" "report_reason" NOT NULL, "content" text NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "comment_report_comment_id_comment_id_fk" FOREIGN KEY ("comment_id") REFERENCES "comment" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- Create "computed_agent_weight" table
CREATE TABLE "computed_agent_weight" ("id" serial NOT NULL, "at_block" integer NOT NULL, "agent_key" character varying(256) NOT NULL, "computed_weight" numeric NOT NULL, "perc_computed_weight" real NOT NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "computed_agent_weight_agent_key_unique" UNIQUE ("agent_key"), CONSTRAINT "computed_agent_weight_agent_key_agent_key_fk" FOREIGN KEY ("agent_key") REFERENCES "agent" ("key") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- Create "penalize_agent_votes" table
CREATE TABLE "penalize_agent_votes" ("id" serial NOT NULL, "agent_key" character varying(256) NOT NULL, "cadre_key" character varying(256) NOT NULL, "penalty_factor" integer NOT NULL, "content" text NOT NULL, "executed" boolean NOT NULL DEFAULT false, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "penalize_agent_votes_agent_key_cadre_key_unique" UNIQUE ("agent_key", "cadre_key"), CONSTRAINT "penalize_agent_votes_cadre_key_cadre_user_key_fk" FOREIGN KEY ("cadre_key") REFERENCES "cadre" ("user_key") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "percent_check" CHECK ((penalty_factor >= 0) AND (penalty_factor <= 100)));
-- Create "user_agent_weight" table
CREATE TABLE "user_agent_weight" ("id" serial NOT NULL, "user_key" character varying(256) NOT NULL, "agent_key" character varying(256) NOT NULL, "weight" real NOT NULL DEFAULT 0, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, PRIMARY KEY ("id"), CONSTRAINT "user_agent_weight_user_key_agent_key_unique" UNIQUE ("user_key", "agent_key"), CONSTRAINT "user_agent_weight_agent_key_agent_key_fk" FOREIGN KEY ("agent_key") REFERENCES "agent" ("key") ON UPDATE NO ACTION ON DELETE NO ACTION);
